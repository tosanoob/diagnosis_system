version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8123:8123"
    volumes:
      - ./app:/app/app
      - ./runtime/chroma_data:/app/runtime/chroma_data
      - ./runtime/models:/app/runtime/models
      - ./logs:/app/logs
    environment:
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - NEO4J_DATABASE=${NEO4J_DATABASE}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - CHROMA_DATA_PATH=/app/runtime/chroma_data
      - DEBUG=True
      - NGROK_ENABLED=${NGROK_ENABLED:-False}
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
      - NGROK_URL=${NGROK_URL}
    depends_on:
      - chromadb
    restart: unless-stopped
    networks:
      - app-network
    command: ["--host", "0.0.0.0", "--port", "8123", "--reload"]

  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    volumes:
      - ./runtime/chroma_data:/chroma/chroma
    ports:
      - "8001:8000"
    environment:
      - CHROMA_DB_IMPL=duckdb+parquet
      - CHROMA_PERSISTENCE_DIRECTORY=/chroma/chroma
    networks:
      - app-network

networks:
  app-network:
    driver: bridge 